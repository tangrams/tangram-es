scene:
    background:
        color: '#8db7d5'
cameras:
    iso-camera:
        # Manhattan
        position: [-74.00976419448854, 40.70532700869127, 16]
        type: isometric
        axis: [0, 1]
        active: false
    perspective-camera:
        # Manhattan
        position: [-74.00976419448854, 40.70532700869127, 16]
        type: perspective #currently ignored
        focal_length: [[16, 2], [20, 6]] # currently ignored
        vanishing_point: [-250, -250] # currently ignored
        active: true

lights:
    light1:
        type: directional
        origin: world
        direction: [1, 1, -1]
        diffuse: [.3, .3, .3, 1.]
        ambient: [0.7, 0.7, 0.7, 1.]

textures:
    pois:
        url: img/poi_icons_32.png
        sprites:
            plane: [0, 0, 32, 32]
            tree: [0, 185, 32, 32]
            sunburst: [0, 629, 32, 32]
            restaurant: [0, 777, 32, 32]
            cafe: [0, 814, 32, 32]
            museum: [0, 518, 32, 32]
            bar: [0, 887, 32, 32]
            train: [0, 74, 32, 32]
            bus: [0, 148, 32, 32]
            hospital: [0, 444, 32, 32]
            parking: [0, 1073, 32, 32]
            info: [0, 1110, 32, 32]
            hotel: [0, 259, 32, 32]
            bookstore: [0, 333, 32, 32]

styles:
    flatcolor:
        base: polygons
        lighting: false
    heightglow:
        base: polygons
        lighting: vertex
        shaders:
            blocks:
                color: "color.rgb += vec3(position.z / 800.);"
    heightglowline:
        base: lines
        mix: heightglow
    icons:
        base: points
        texture: pois

sources:
    osm:
        type: MVT
        url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.mvt
        max_zoom: 16

layers:
    touch:
        data: { source: touch }
        line:
          filter: { type: line }
          draw:
            lines:
              color: function () { return feature.color || 'black'; }
              order: 50
              width: 2px
        poly:
            filter: { type: poly }
            draw:
              polygons:
                color: magenta
                order: 40
        point:
            filter: { type: point }
            draw:
              icons:
                sprite: sunburst
                collide: false
                transition:
                    [show, hide]:
                        time: 0s

    earth:
        data: { source: osm }
        draw:
            polygons:
                order: 0
                color: '#f0ebeb'
    landuse:
        data: { source: osm }
        filter:
            name: true
            any:
                - { $zoom: { min: 9 }, area: { min: 10000000 } }
                - { $zoom: { min: 10 }, area: { min: 3300000 } }
                - { $zoom: { min: 12 }, area: { min: 1000000 } }
                - { $zoom: { min: 13 }, area: { min: 10000 } }
                - { $zoom: { min: 15 } }
        draw:
            polygons:
                order: 1
                color: '#fffffa'
                interactive: true # currently ignored
        green:
            filter: { kind: [park, graveyard, cemetery, forest, recreation_ground] }
            draw:
                polygons:
                    order: 2
                    color: '#89ab84'
        blue:
            filter: { kind: [commercial, industrial] }
            draw:
                polygons:
                    color: '#C0CDCD'
        orange:
            filter: { kind: [university] }
            draw:
                polygons:
                    color: '#D9CFC3'

    water:
        data: { source: osm }
        filter:
            any:
                # show smaller water areas at higher zooms
                - { $zoom: { min: 0 }, area: { min: 10000000 } }
                - { $zoom: { min: 10 }, area: { min: 1000000 } }
                - { $zoom: { min: 12 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 1000 } }
                - { $zoom: { min: 18 } }
        draw:
            flatcolor:
                order: 3
                color: '#8db7d5'

    roads:
        data: { source: osm }
        filter:
            not: { kind: [rail] }
        draw:
            lines:
                color: white
                width: 12.
                order: 'function() { return feature.sort_key + 5 }'
                outline:
                    color: [[16, '#999'], [18, '#aaa']]
                    width: [[15, 0], [16, 2]]

        rounded:
            filter: { $zoom: { min: 18 } }
            draw:
                lines:
                    cap: round
        # rail:
        #     filter: { kind: rail }
        #     draw:
        #        lines:
        #           cap: butt
        #           color: '#333'
        #           width: 1.
        #           order: 8
        #           outline:
        #             color: '#555'
        #             width: 1.5
        routes:
            filter: { $zoom: { max: 10 } }
            draw:
                lines:
                    color: '#aaa'
                    width: 2.
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    color: '#D16768'
                    width: [[14, 2px], [15, 12]]
                    outline:
                        width: [[14, 0], [15, 2]]
            link:
                filter: { is_link: yes }
                draw:
                    lines:
                        color: '#aaa'
                        width: [[13, 1px], [14, 12]]
        major_road:
            filter: { kind: major_road, $zoom: { min: 10 } }
            draw:
                lines:
                    color: '#aaaaa4'
                    width: [[10, 1px], [13, 2px], [14, 2px], [16, 12]]
                    outline:
                        width: [[16, 0], [17, 1]]
        minor_road:
            filter: { kind: minor_road }
            draw:
                lines:
                    color: '#bbbbb8'
                    width: [[13, 1px], [14, 1px], [15, 8]]
                    outline:
                        width: [[17, 0], [18, 1]]
        paths:
            filter: { kind: path }
            draw:
                lines:
                    color: '#fff'
                    width: [[15, 1px], [17, 2px]]
                    outline:
                        width: 0
        airports:
            filter: { aeroway: true }
            draw:
                lines:
                    color: '#f00'
            taxiways:
                filter: { aeroway: taxiway }
                draw:
                    lines:
                        width: [[13, 1px], [14, 2.0], [17, 5.0]]
            runways:
                filter: { aeroway: runway }
                draw:
                    lines:
                        color: [[13, '#FFE4B5'], [16, white]]
                        width: [[11, 2.], [12, 3.], [13, 4.], [17, 8.]]
                        order: 39
                        cap: square
                        outline:
                            color: orange
                            width: [[11, 0], [12, 1.], [17, 2.]]

    poi_icons:
        data: { source: osm, layer: pois }
        filter: { name: true, not: { kind: [peak, viewpoint, bicycle_rental, car_sharing] }, $zoom: { min: 15 } }
        draw:
            icons:
                interactive: true
                #offset: [0px, -15px]
                size: 20px
                priority: 5
                collide: true
                transition:
                    [show, hide]:
                        time: 1s
                #size: [[13, 12px], [15, 18px]]
                #interactive: true

        # add generic icon at high zoom
        generic:
            filter: { $zoom: { min: 18 } }
            draw:
                icons:
                    sprite: function() { return feature.kind; }
                    sprite_default: info
                    #sprite: info

        # examples of different icons mapped to feature properties
        icons:
            restaurant:
                filter: { kind: [restaurant] }
                draw: { icons: { sprite: restaurant } }
            cafe:
                filter: { kind: [cafe, convenience] }
                draw: { icons: { sprite: cafe } }
            bar:
                filter: { kind: [bar, pub] }
                draw: { icons: { sprite: bar } }
            culture:
                filter: { kind: [museum, library, church, place_of_worship, bank] }
                draw: { icons: { sprite: museum } }
            station:
                filter: { kind: [station] }
                draw: { icons: { sprite: train } }
            hospital:
                filter: { kind: [hospital, pharmacy] }
                draw: { icons: { sprite: hospital } }
            hotel:
                filter: { kind: [hotel, hostel] }
                draw: { icons: { sprite: hotel } }
            bus_stop:
                filter: { kind: [bus_stop] }
                draw: { icons: { sprite: bus } }
            bookstore:
                filter: { kind: [bookstore] }
                draw: { icons: { sprite: bookstore } }

    buildings:
        data: { source: osm }
        filter: { $zoom: { min: 14 } }
        draw:
            polygons:
                style: heightglow
                order: 50
                color: [.65, .65, .63]
        # turn interactive feature selection on for buildings with names
        interactive:
            filter: { name: true }
            draw:
                polygons:
                    interactive: true
        extruded:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    extrude: true
                lines:
                    style: heightglowline
                    width: 1.0
                    color: [.75, .75, .73]
                    order: 52
                    extrude: true
        high-line:
            filter: {roof_material: grass}
            draw:
                polygons:
                    style: polygons
                    color: '#bddec5'
    poi_labels:
        data: { source: osm, layer: pois }
        filter: { name: true, not: { kind: [peak, viewpoint, bicycle_rental, car_sharing] }, $zoom: { min: 15 } }
        draw:
            text:
                interactive: true
                #offset: [0, 12px]
                align: right
                text_wrap: 20
                font:
                    family: amiri
                    style: regular
                    size: 25px
                    fill: white
    road_labels:
        data: {source: osm, layer: roads}
        filter: { name: true, aeroway: false, tunnel: false, railway: false, not: { kind: rail }, $zoom: { min: 10 } }
        draw:
            text:
                interactive: true
                visible: true
                priority: 2
                offset: [0, 8px]
                transition:
                    [show, hide]:
                        time: 1s
                offset: [[16, [0, 8px]], [18, [0, 120px]]]
                font:
                    family: amiri
                    style: normal
                    size: 25px
                    fill: black
                    stroke: { color: white, width: 2 }
        highway:
            filter: { kind: highway }
            draw:
                text:
                    repeat_distance: 200px
                    repeat_group: road_labels
                    visible: true
                    #offset: [0px, 5px]
                    priority: 1
                    transition:
                        [show, hide]:
                            time: 1s
                    font:
                        family: amiri
                        style: regular
                        size: 25px
                        fill: black
                        transform: capitalize
        major_road:
            filter: { kind: major_road }
            draw:
                text:
                    repeat_distance: 100px
                    repeat_group: roads
                    interactive: true
                    visible: true
                    priority: 3
                    transition:
                        [show, hide]:
                            time: 1s
                    font:
                        family: amiri
                        style: regular
                        size: 25px
    places:
        data: { sources: osm }
        filter:
            name: true
            not: { kind: [county, state, island] }
            any:
                - { $zoom: { min: 1 }, kind: ocean }
                - { $zoom: { min: 2, max: 5 }, kind: continent }
                #important contries
                - { $zoom: { min: 4 }, name: ["United States of America", "Brasil", "Россия", "中华人民共和国"] }
                # unimportant countries
                - { $zoom: { min: 5 }, kind: country }
                # this function matches the "cities" sublayer
                #- function() {return (feature.scalerank * .75) <= ($zoom - 4); }
        draw:
            text:
                interactive: true
                priority: 5
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: amiri
                    style: regular
                    size: 24px
                    fill: black
        continents:
            filter: { kind: continent }
            draw: {}
        countries:
            filter: { kind: country }
            draw: {}
        oceans:
            filter: { kind: ocean }
            draw: {}
        minor-places:
            filter: { kind: [hamlet, village, town, neighbourhood, suburb, quarter], $zoom: { max: 13 } }
            draw: {}
            #visible: false
        #cities:
            # this filter shows lower scaleranks at higher zooms, starting at z4
            #filter: function() { return (feature.scalerank * .75) <= ($zoom - 4); }
    landuse_labels:
        data: { source: osm, layer: [landuse_labels, pois] }
        filter:
            name: true
            kind: [park, forest, cemetery, graveyard]
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 9 }, area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 1000000 } }
                - { $zoom: { min: 15 }, area: { min: 10000 } }
                - { $zoom: { min: 18 } }
        draw:
            text:
                interactive: true
                priority: 0
                transition:
                    [show, hide]:
                        time: 1s
                font:
                    family: amiri
                    style: regular
                    style: normal
                    size: 24px
                    fill: darkgreen

    pois:
        data: { source: osm }
        draw:
            icons: {}
